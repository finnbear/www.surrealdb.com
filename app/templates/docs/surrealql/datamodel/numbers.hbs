<Crumb>
	<Crumb::Item @link="docs">Documentation</Crumb::Item>
	<Crumb::Item @link="docs.surrealql">SurrealQL</Crumb::Item>
	<Crumb::Item @link="docs.surrealql.datamodel">Data model</Crumb::Item>
	<Crumb::Item @link="docs.surrealql.datamodel.numbers">Numbers</Crumb::Item>
</Crumb>

<Layout::Text text-l text-f>
    <h2>Numbers</h2>
	<p>In SurrealDB, numbers can be one of three types. 64-bit integers, 64-bit floating point numbers, or arbitrary-length decimal numbers with infinite precision.</p>
</Layout::Text>

<Layout::Gap mini />

<Layout::Text text-l text-f>
	<h3>Integer numbers</h3>
	<p>If a numeric value is specified without any decimal point suffix and is within the range <code>-9223372036854775808</code> to <code>9223372036854775807</code> then the value will be parsed, stored, and treated as a 64-bit integer.</p>
	<Code @name="docs-datamodel-number-integer.surql">
		CREATE event SET year = 2022;
	</Code>
</Layout::Text>

<Layout::Gap mini />

<Layout::Text text-l text-f>
	<h3>Floating point numbers</h3>
	<p> If a number value is specified with a decimal point suffix, or is outside of the maximum range specified above, then the number will automatically be parsed, stored, and treated as a 64-bit floating point value. This ensures efficiency when performing mathematical calculations within SurrealDB.</p>
	<Code @name="docs-datamodel-number-float.surql">
		CREATE event SET temperature = 41.5;
	</Code>
</Layout::Text>

<Layout::Gap mini />

<Layout::Text text-l text-f>
	<h3>Decimal numbers</h3>
	<p>To use 128-bit decimal numbers when specifying numeric values, you can use the <code>dec</code> suffix.</p>
	<Code @name="docs/datamodel/number/decimal.surql" />
</Layout::Text>

<Layout::Gap mini />

<Layout::Text text-l text-f>
	<h3>Using a specific numeric type</h3>
	<p>To use a specific type when specifying numeric values, you can <Link @link="docs.surrealql.datamodel.casting">cast</Link> the value to a specific numeric type or use the appropriate suffix.</p>
	<Code @name="docs/datamodel/number/cast.surql" />
</Layout::Text>

<Layout::Gap mini />

<Layout::Text text-l text-f>
	<h3>Numeric precision</h3>
	<p>Different numeric types can be compared and used together in calculations.</p>
	<p>The benefits of floating point numeric values are speed and storage size, but there is a limit to the numeric precision.</p>
	<codes vertical>
		<Code @name="docs/datamodel/number/float.surql" />
		<Code @name="docs-datamodel-simple-number-float-result.txt">
			13.571938471938473
		</Code>
	</codes>
	<p>In addition, when using floating point numbers specifically, mathematical operations can result in a loss of precision (as is normal with other databases).</p>
	<codes vertical>
		<Code @name="docs/datamodel/number/maths-float.surql" />
		<Code @name="docs-datamodel-simple-number-maths-float-result.txt">
			1.0000000000000002
		</Code>
	</codes>
	<p>Common rounding errors can be avoided by performing calculations using decimals.</p>
	<codes vertical>
		<Code @name="docs/datamodel/number/maths-decimal.surql" />
		<Code @name="docs-datamodel-simple-number-maths-decimal-result.txt">
			1.0
		</Code>
	</codes>
</Layout::Text>

<Layout::Gap mini />

<Layout::Text text-l text-f>
	<h3>Mathematical constants</h3>
	<p>A set of floating point numeric constants are available in SurrealDB. Constant names are case insensitive, and can be specified with either lowercase or capital letters, or a mixture of both.</p>
	<Code @name="docs-datamodel-number-constant.surql">
		CREATE circle SET radius = circumference / ( 2 * MATH::PI );
	</Code>
</Layout::Text>

<Layout::Gap mini />

<Layout::Table filled>
	<table>
		<thead>
			<tr>
				<th w-40>Constant</th>
				<th w-60>Value</th>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td><code>MATH::E</code></td>
				<td><code>2.718281828459045</code></td>
			</tr>
			<tr>
				<td><code>MATH::FRAC_1_PI</code></td>
				<td><code>0.3183098861837907</code></td>
			</tr>
			<tr>
				<td><code>MATH::FRAC_1_SQRT_2</code></td>
				<td><code>0.7071067811865476</code></td>
			</tr>
			<tr>
				<td><code>MATH::FRAC_2_PI</code></td>
				<td><code>0.6366197723675814</code></td>
			</tr>
			<tr>
				<td><code>MATH::FRAC_2_SQRT_PI</code></td>
				<td><code>1.1283791670955126</code></td>
			</tr>
			<tr>
				<td><code>MATH::FRAC_PI_2</code></td>
				<td><code>1.5707963267948966</code></td>
			</tr>
			<tr>
				<td><code>MATH::FRAC_PI_3</code></td>
				<td><code>1.0471975511965979</code></td>
			</tr>
			<tr>
				<td><code>MATH::FRAC_PI_4</code></td>
				<td><code>0.7853981633974483</code></td>
			</tr>
			<tr>
				<td><code>MATH::FRAC_PI_6</code></td>
				<td><code>0.5235987755982989</code></td>
			</tr>
			<tr>
				<td><code>MATH::FRAC_PI_8</code></td>
				<td><code>0.39269908169872414</code></td>
			</tr>
			<tr>
				<td><code>MATH::LN_10</code></td>
				<td><code>2.302585092994046</code></td>
			</tr>
			<tr>
				<td><code>MATH::LN_2</code></td>
				<td><code>0.6931471805599453</code></td>
			</tr>
			<tr>
				<td><code>MATH::LOG10_2</code></td>
				<td><code>0.3010299956639812</code></td>
			</tr>
			<tr>
				<td><code>MATH::LOG10_E</code></td>
				<td><code>0.4342944819032518</code></td>
			</tr>
			<tr>
				<td><code>MATH::LOG2_10</code></td>
				<td><code>3.321928094887362</code></td>
			</tr>
			<tr>
				<td><code>MATH::LOG2_E</code></td>
				<td><code>1.4426950408889634</code></td>
			</tr>
			<tr>
				<td><code>MATH::PI</code></td>
				<td><code>3.141592653589793</code></td>
			</tr>
			<tr>
				<td><code>MATH::SQRT_2</code></td>
				<td><code>1.4142135623730951</code></td>
			</tr>
			<tr>
				<td><code>MATH::TAU</code></td>
				<td><code>6.283185307179586</code></td>
			</tr>
		</tbody>
	</table>
</Layout::Table>

<Layout::Gap mini />

<Layout::Text text-l text-f>
	<h3>Next steps</h3>
	<p>You've now seen how to use numeric values in SurrealDB. For more advanced functionality, take a look at the <Link @link="docs.surrealql.operators">operators</Link> and <Link @link="docs.surrealql.functions.math">math</Link> functions, which enable advanced calculations on numeric values and sets of numeric values.</p>
</Layout::Text>

<Layout::Gap large />
